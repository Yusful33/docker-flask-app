apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        runAsUser: 999
      containers:
      - name: postgres
        image: postgres:12.18
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-password
              key: db-password
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-data
        - mountPath: /docker-entrypoint-initdb.d/weather_init.sh
          subPath: weather_init.sh
          name: init-scripts
        - mountPath: /docker-entrypoint-initdb.d/cc_init.sh
          subPath: cc_init.sh
          name: init-scripts
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: pvc-db-data
      - name: init-scripts
        configMap:
          name: init-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
